{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Manifesto for a Continuous Delivery Risk Management Framework (CD-RMF)\u00a9","text":"<p>AKA THE C-ATO MANIFESTO</p> <p></p> <p>Manifesto for a Continuous Delivery Risk Management Framework (CD-RMF)\u00a9 2023 by Rise8, Inc. is licensed under CC BY-ND 4.0. This license requires that reusers give credit to the creator. It allows reusers to copy and distribute the material in any medium or format in unadapted form only, even for commercial purposes.</p>"},{"location":"#introduction","title":"Introduction","text":"<p>We believe that achieving continuous delivery as part of DevOps in the federal government, subject to FISMA, requires a truly continuous application of the NIST Risk Management Framework (RMF). While this can be done within the letter of NIST 800-37r2, we intend to advocate for a new authorization type or a new subset of ongoing authorization. This would require a particular implementation of the RMF for Continuous Delivery as part of Agile Software Development &amp; Operations. </p> <p>The US Air Force pioneered such an implementation which resulted in a Continuous Authority to Operate (cATO). Since then, there has been little consensus on what a cATO is, much less how to implement the RMF to achieve one. In fact, many cATOs have completely diverged from RMF and cannot be considered FISMA compliant. For that reason, we are proposing the term \u201ccATO\u201d no longer be used. Even if the poor practices could be cleaned up, the name itself is problematic and cannot be found as an authorization type/decision within NIST 800-37. It was always intended to be a very opinionated subset of ongoing authorization with prescribed practices. We hope to codify this under a new authorization type/decision.</p> <p>This manifesto and the playbook aim to align the community around achieving the \u201cearly and continuous delivery of valuable software\u201d in federal government as promised by the Manifesto for Agile Software Development. Given that, we have intentionally stayed true to the format and content of the Manifesto, highlighting how compliant DevOps naturally fits in.</p> <p></p> <p>This artifact draws heavily from the Manifesto for Agile Software Development, which can be found at: https://agilemanifesto.org/</p>"},{"location":"history/","title":"History: The Evolution of Continuous Authority to Operate","text":"<p>It is important to understand that this has already been done. </p> <p>On April 18, 2018, in an Air Force memorandum titled \u201cImplementation of Ongoing Authorization for Agile Software Development\u201d, Authorizing Official Lauren Knausenberger, then Air Force Director of Cyberspace Innovation, approved the first so-called \u201cContinuous Authority to Operate\u201d (coined by Bryon Kroger) implemented by Kessel Run.</p> <p>Kessel Run had stood on the shoulders of giants, such as 18F\u2019s accelerated ATOs on cloud.gov and NGA\u2019s \u2018ATO-in-a-day\u2019 for their GEOINT Services Platform, but they were the first to implement the Risk Management Framework in a way that fully aligned with the Agile and DevOps SDLC without tradeoffs between speed and compliance/risk, and included the full-stack implementation and assessment of the associated controls. Kessel Run, at the time, could produce a full, up-to-date authorization package for every release in real time. </p> <p>The first applications to achieve this were Raven and Marauder, both deployed to an on-premise cloud stack running Pivotal Cloud Foundry (like our friends at NGA) on the SIPR network. The Kessel Run team, led by Bryon Kroger and Andrew Altizer (ISSM), implemented this combination of people, process, and technology for an ongoing authorization that was tailor made for DevOps with deployment frequencies measured in hours. Bryon coined the term \u201ccATO\u201d to describe that specific implementation of an ongoing authorization within RMF to enable true continuous delivery. Some of the technology and process underpinnings were adapted from NGA and 18F, while some were changed or added. </p> <p>Unfortunately, the cATO would take on a life of its own and headed in a different direction, away from an RMF-based controls implementation, assessment, and authorization to something based on political favor and a particular reference design that required the use of certain technologies, at odds with the RMF\u2019s technology neutral stance. Senior leaders also began to espouse \u201ccertifying the people and the process\u201d, instead of systems themselves and, unfortunately, placed their trust in the wrong people who weren\u2019t even practicing the RMF-deficient method they were preaching. </p> <p>During that time, Bryon Kroger left the Air Force and founded Rise8, where we have continued advancing RMF for continuous delivery, improving both process and automation. It has been difficult, however, to get the community to adopt this rigorous approach given that many organizations were able to get all the benefits of being able to continuously deploy their software without doing the work. It\u2019s a close cousin of Shadow IT: Shadow ATO.</p> <p>Thankfully things started to change when the DOD CIO published a cATO memorandum that most insiders would describe as an attempt to clean up the mess of existing cATOs. </p> <p>While this was great to see and a cleanup is much needed, we believe it misses the mark on how to apply NIST RMF to continuous delivery. The office has not consulted the actual practitioners who have implemented a truly RMF-based authorization for continuous delivery and, as of this writing, are writing additional guidance without doing so.</p> <p>That is why Rise8 authored the manifesto and are making our playbook for CD-RMF public. Additionally we are forming a group of like-minded experts to lead an open source community that continues advancing CD-RMF.</p>"},{"location":"the-12-principles/","title":"The 12 Principles behind the Manifesto","text":"<p>We still believe that the Agile Manifesto for Software Development\u2019s principles have withstood the test of time and are completely relevant to, and perhaps always included, security and privacy. We therefore offer them here with slight refactoring to emphasize what has always been true:</p> <ol> <li>\u201cOur highest priority,\u201d even as security professionals, \u201cis to satisfy the customer through early and continuous delivery of valuable software.\u201d</li> <li>\u201cWelcome changing\u201d software, at any stage of the system\u2019s lifecycle. Agile risk management \u201cprocesses harness change for the customer's competitive advantage.\u201d</li> <li>\u201cDeliver working software frequently,\u201d even as often as multiple times per hour, \u201cwith a preference to the shorter timescale,\u201d without increasing security and privacy risk.</li> <li>Security &amp; Privacy professionals, \u201cbusiness people, and developers must work together daily throughout the project.\u201d</li> <li>\u201cBuild projects around motivated individuals. Give them the environment and support they need, and trust them to get the [risk management] job done,\u201d and implement the right controls in the right way.</li> <li>\u201cThe most efficient and effective method of conveying information to and within a development team is face-to-face conversation\u201d or via APIs. Any GRC should be written in code with automated workflows to the greatest extent practical, not in static documents.</li> <li>Mission outcomes in prod are still \u201cthe primary measure of progress,\u201d and risk professionals should view themselves as protagonists.</li> <li>\u201cAgile [risk management] processes promote sustainable development\u201d and operations. \u201cThe sponsors, [the cross-functional team], and users should be able to maintain a constant pace indefinitely.\u201d</li> <li>\u201cContinuous attention to technical excellence and good design,\u201d which includes information security and privacy, \u201cenhances agility.\u201d</li> <li>\u201cSimplicity--the art of maximizing the amount of work not done--is essential.\u201d</li> <li>\u201cThe best [privacy/security] architectures, requirements, and designs emerge from self-organizing teams.\u201d</li> <li>\u201cAt regular intervals, the [cross-functional] team reflects on how to become more effective, then tunes and adjusts its behavior accordingly.\u201d</li> </ol> <p></p> <p>This artifact draws heavily from the Manifesto for Agile Software Development, which can be found at: https://agilemanifesto.org/</p>"},{"location":"the-8-values/","title":"The 8 Values","text":"<p>\u201cWe are uncovering better ways of [managing security and privacy risk] by doing it and helping others do it. Through this work, we have come to value:\u201d</p> <ol> <li>Proactive Prevention over Reactive Remediation<ul> <li>While we recognize the importance of addressing vulnerabilities and breaches, we prioritize building systems that prevent these issues from arising in the first place.</li> </ul> </li> <li>Automated Assurance over Manual Checks<ul> <li>While manual checks have their place, we believe in harnessing the power of automation to ensure RMF standards are consistently and efficiently met.</li> </ul> </li> <li>Continuous Collaboration over Siloed Departments<ul> <li>Rather than isolating teams with differing incentives, we value the synergy of development, operations, and risk management teams working together to achieve common goals.</li> </ul> </li> <li>Adaptive Frameworks over Rigid Rulesets<ul> <li>While certain standards are non-negotiable, we believe in a flexible approach, as encouraged by the RMF, that can adapt to new challenges, technologies, and learnings without compromising security or privacy.</li> </ul> </li> <li>Real-time Feedback over Periodic Audits<ul> <li>While periodic reviews are necessary, we prioritize systems that provide instant feedback on security and privacy risk, enabling immediate actions and adjustments.</li> </ul> </li> <li>Team Education over Enforcement Only<ul> <li>Instead of just imposing rules, we value educating teams on the importance of RMF, fostering a culture of shared responsibility and awareness.</li> </ul> </li> <li>Transparency in Processes over Obscurity<ul> <li>We believe in clear visibility into our RMF processes, technologies, and their outputs, ensuring that all stakeholders understand, trust, and can validate our approach at any time.</li> </ul> </li> <li>Tailored Implementations over One-size-fits-all<ul> <li>While generic solutions can provide a foundation, we prioritize implementations that meet the unique mission objectives for each organization.</li> </ul> </li> </ol> <p></p> <p>\"That is, while there is value in the items on the right, we value the items on the left more.\"[^1]</p> <p></p> <p>This artifact draws heavily from the Manifesto for Agile Software Development, which can be found at: https://agilemanifesto.org/</p>"}]}